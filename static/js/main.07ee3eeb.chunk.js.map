{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","scope","TableBody","props","rows","users","map","row","index","key","id","name","surname","desc","onClick","removeUser","editUser","offset","page","filter","el","Pagination","pagePrevious","pageNext","className","Table","state","length","setState","bind","this","Component","initialState","Form","handleChange","event","target","value","submitForm","handleSubmit","type","onChange","url","App","getUsers","fetch","then","response","json","data","catch","error","console","form","url_submit","avatar","submitmethod","editmode","method","ok","Error","statusText","log","edUser","urldelete","editMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07ee3eeb.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\n\r\n/**\r\n * Outputting the array of users:\r\n * - Displaying the table header\r\n * - Displaying the table body\r\n * - Displaying the pagination buttons\r\n */\r\n\r\nconst TableHeader = () => {         // Table header displaying\r\n    return (\r\n        <thead>\r\n        <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Surname</th>\r\n            <th scope=\"col\">Desc</th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Edit</th>\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {        // Generation of DB-table\r\n    let rows = props.users.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.id}</td>\r\n                <td>{row.name}</td>\r\n                <td>{row.surname}</td>\r\n                <td>{row.desc}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeUser(index)}>Delete</button>\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.editUser(index)}>Edit</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    // Selection users from the array to the output page\r\n    const {offset, page} = props\r\n\r\n    rows = rows.filter((el, index) => ((index >= offset) && (index < offset + page)))\r\n\r\n    return ( <tbody id=\"db_tab\">{rows}</tbody> )\r\n}\r\n\r\nconst Pagination = (props) => {             // Go to the next/previous page - Buttons: \"Previous\"/\"Next\"\r\n    const { pagePrevious, pageNext } = props\r\n    return (\r\n        <div className=\"column nest\">\r\n            <ul className=\"pager\">\r\n                <li><a onClick={pagePrevious}>&#9650;&nbsp;&nbsp;Previous</a></li>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <li><a onClick={pageNext}>&#9660;&nbsp;&nbsp;Next</a></li>\r\n            </ul>\r\n            <br/><br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Table extends Component {             // Database table displaying\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            offset: 0,      // Page offset on the screen\r\n            page: 5         // Page size\r\n        }\r\n        this.pageNext = this.pageNext.bind(this)\r\n        this.pagePrevious = this.pagePrevious.bind(this)\r\n    }\r\n\r\n    pageNext = () => {                      // Next page\r\n        let {offset, page} = this.state\r\n        if ((offset + page) < this.props.users.length)\r\n            this.setState({offset: offset + page})\r\n    }\r\n\r\n    pagePrevious = () => {                  // Previous page\r\n        let {offset, page} = this.state\r\n        if ((offset - page) >= 0)\r\n            this.setState({offset: offset - page})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <table className=\"table\">\r\n                    <TableHeader />\r\n                    <TableBody users={this.props.users} removeUser={this.props.removeUser}\r\n                               editUser={this.props.editUser} offset={this.state.offset}\r\n                               page={this.state.page} />\r\n                </table>\r\n                <Pagination pageNext={this.pageNext} pagePrevious={this.pagePrevious}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","import React, { Component } from 'react'\r\n\r\nconst initialState = {\r\n    id: '',\r\n    name: '',\r\n    surname: '',\r\n    desc: ''\r\n}\r\nclass Form extends Component {      // Generating <form> tag for inputting new user\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = initialState       // State of Form component\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submitForm = this.submitForm.bind(this)\r\n    }\r\n\r\n    handleChange = event => {       // Input/Output of a character\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {            // Transfer of the entered data for processing to the upper level\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(initialState)\r\n    }\r\n\r\n    render() {                      // Form generation\r\n        const { id, name, surname,  desc } = this.state\r\n        return (\r\n            <form>\r\n                <label>Id&nbsp;</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"id\"\r\n                    value={id}\r\n                    onChange={this.handleChange} />\r\n                <label>&nbsp;&nbsp;&nbsp;Name&nbsp;</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label>&nbsp;&nbsp;&nbsp;Surname&nbsp;</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"surname\"\r\n                    value={surname}\r\n                    onChange={this.handleChange} />\r\n                <label>&nbsp;&nbsp;&nbsp;Desc&nbsp;</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"desc\"\r\n                    value={desc}\r\n                    onChange={this.handleChange} />\r\n                <br/><br/>\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n/**\n * Sending the (GET, POST, PUT, DELETE) requests to the site and displaying the received (users) data.\n */\n\nconst url = \"http://77.120.241.80:8811/api/users/\"              // Site address\nconst initialState = {\n    id: '',\n    name: '',\n    surname: '',\n    desc: ''\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        let  edUser = initialState\n\n        this.state = {            // State initialization\n            users: [],            // Array of users received from the server\n            editmode: false       // Current user edit mode - true; false - user input mode\n        }\n\n        this.getUsers()           // Getting users from site\n\n        this.getUsers = this.getUsers.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.editUser = this.editUser.bind(this)\n        this.removeUser = this.removeUser.bind(this)\n    }\n\n\n    getUsers = ()  => {                 // GET request. Getting Array of users\n        fetch(url)\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                this.setState({users: data})    // Loading array of users\n            })\n            .catch(error => {\n                console.error(error)\n            })\n    }\n\n    handleSubmit = form => {            // POST/PUT request. Adding/editing user\n        let url_submit = url + '?id=' + form.id +\n            '&name=' + form.name +\n            '&surname=' + form.surname +\n            '&desc=' + form.desc +\n            '&avatar=' + form.avatar\n        let submitmethod = this.state.editmode ? \"PUT\" : \"POST\"\n        fetch(url_submit, { method: submitmethod })   // POST request\n            .then(response => {\n                if (!response.ok) throw Error(response.statusText)\n                return response.json()\n            })\n            .then(data => console.log(data))\n            .catch(error => console.log(error))\n        this.getUsers()\n        this.edUser = initialState\n    }\n\n    editUser = index => {               // Switch to edit mode\n        this.edUser =  this.state.users[index]\n        this.setState({editmode: true})\n    }\n\n    removeUser = index => {            // DELETE request. Deleting current user\n        let urldelete = url + this.state.users[index].id\n        fetch(urldelete, { method: \"DELETE\" })    // DELETE request\n            .then(response => {\n                if (!response.ok) throw Error(response.statusText)\n                return response.json();\n            })\n            .then(data => console.log(data))\n            .catch(error => console.log(error))\n        this.getUsers()\n    }\n\n  render() {\n    return (\n        <div className=\"container\">\n            <Table users={this.state.users} removeUser={this.removeUser} editUser={this.editUser} />\n            <Form handleSubmit={this.handleSubmit} editMode={this.state.editmode}\n                  editUser={this.edUser} />\n        </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './gui_react.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}